# Generated by Django 4.0.5 on 2022-06-29 13:29

import ckeditor.fields
import colorfield.fields
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields
import shop.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_item', models.IntegerField(blank=True, default=1, null=True, verbose_name='Количество Товара')),
                ('cart_qantinline', models.IntegerField(verbose_name='К-во в линейке')),
            ],
            options={
                'verbose_name_plural': 'Корзина',
            },
        ),
        migrations.CreateModel(
            name='CarzinaTotal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_ordered', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photocolect', models.ImageField(upload_to=None, verbose_name='Фото для Коллеции')),
                ('title', models.TextField(max_length=200, verbose_name='Заголовок')),
            ],
            options={
                'verbose_name_plural': 'Коллекция',
            },
        ),
        migrations.CreateModel(
            name='Footer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info', models.CharField(blank=True, max_length=100, null=True, verbose_name='Инфо о контакте')),
                ('numheder', models.IntegerField(blank=True, verbose_name='Номер в хедере')),
                ('contacts', multiselectfield.db.fields.MultiSelectField(choices=[('Number', 'Number'), ('Mail', 'Mail'), ('Instagram', 'Instagram'), ('Telegram', 'Telegram'), ('WhatsApp', 'WhatsApp')], max_length=150, verbose_name='Выбор из списка')),
                ('mail', models.EmailField(max_length=100, verbose_name='Почта')),
                ('insta', models.CharField(blank=True, max_length=100, null=True, verbose_name='Инстаграм')),
                ('tele', models.CharField(blank=True, max_length=100, null=True, verbose_name='Телеграм')),
                ('wats', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ватсап')),
            ],
            options={
                'verbose_name_plural': 'Футер и Хедер',
            },
        ),
        migrations.CreateModel(
            name='Help',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(max_length=150, verbose_name='Вопрос')),
                ('answer', models.TextField(max_length=150, verbose_name='Ответ')),
                ('pucture', models.ImageField(upload_to='', verbose_name='Фото для помощи')),
            ],
            options={
                'verbose_name_plural': 'Помощь',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photonews', models.ImageField(upload_to=None, verbose_name='Фотография для новостей')),
                ('zaganews', models.TextField(max_length=200, verbose_name='Заголовок')),
                ('opisanie', ckeditor.fields.RichTextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name_plural': 'Новости',
            },
        ),
        migrations.CreateModel(
            name='Onas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zaga', models.TextField(max_length=150, verbose_name='Заголовок')),
                ('opisanie', ckeditor.fields.RichTextField(blank=True, verbose_name='Описание')),
                ('photo1', models.ImageField(upload_to=None)),
                ('photo2', models.ImageField(upload_to=None)),
                ('photo3', models.ImageField(upload_to=None)),
            ],
            options={
                'verbose_name_plural': 'О нас',
            },
        ),
        migrations.CreateModel(
            name='Prem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.FileField(max_length=95, upload_to=None, verbose_name='Фото')),
                ('zagalovok', models.TextField(max_length=150, verbose_name='Заголовок')),
                ('description', ckeditor.fields.RichTextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name_plural': 'Преимущества',
            },
        ),
        migrations.CreateModel(
            name='Public',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ugolok', models.TextField(max_length=150, verbose_name='Заголовок')),
                ('opisanie', ckeditor.fields.RichTextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name_plural': 'Публичный оферта',
            },
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_cust', models.CharField(blank=True, max_length=100, verbose_name='Имя')),
                ('firs_cust', models.CharField(blank=True, max_length=100, verbose_name='Фамилия')),
                ('email_customer', models.EmailField(max_length=254, verbose_name='Почта')),
                ('number_cust', models.CharField(blank=True, max_length=100, verbose_name='Номер Телефона')),
                ('country', models.CharField(max_length=200, null=True, verbose_name='Страна')),
                ('city', models.CharField(max_length=200, null=True, verbose_name='Город')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('choice_contact', multiselectfield.db.fields.MultiSelectField(choices=[('Оформлен', 'Оформлен'), ('Отменен', 'Отменен'), ('Новый', 'Новый')], default=('Новый', 'Новый'), max_length=150, verbose_name='Выбор из списка')),
            ],
            options={
                'verbose_name_plural': 'Адрес доставки',
            },
        ),
        migrations.CreateModel(
            name='Slider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sliderpole', models.ImageField(upload_to=None, verbose_name='Фото для Слайдера')),
                ('sliderpu', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Слайдер',
            },
        ),
        migrations.CreateModel(
            name='Svyaz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('namepole', models.CharField(blank=True, max_length=100, verbose_name='Имя')),
                ('numberpole', models.CharField(max_length=200, verbose_name='Номер телефона')),
                ('vremya', models.DateTimeField(auto_now=True)),
                ('stazvonili', models.BooleanField(default=None, verbose_name='Cтатус позвонили')),
            ],
            options={
                'verbose_name_plural': 'Обратный звонок с фронта',
            },
        ),
        migrations.CreateModel(
            name='Vybor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heder', models.ImageField(blank=True, upload_to='None/%Y/%m/%d', verbose_name='Логотип для Хедера')),
                ('foter', models.ImageField(blank=True, upload_to='None/%Y/%m/%d', verbose_name='Логотип для Футера')),
                ('telnum', models.CharField(blank=True, max_length=100, verbose_name='Номер')),
                ('info_footer', models.CharField(blank=True, max_length=100, null=True, verbose_name='Инфо')),
            ],
            options={
                'verbose_name_plural': 'Лого и номер футера',
            },
        ),
        migrations.CreateModel(
            name='Tovar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(editable=False, max_length=250)),
                ('imagetovar', models.ImageField(upload_to='None/%Y/%m/%d', verbose_name='Фотографии')),
                ('nametovar', models.CharField(max_length=150, verbose_name='Название товара')),
                ('articul', models.CharField(max_length=150, verbose_name='Aртикул')),
                ('pricetovar', models.IntegerField(blank=True, verbose_name='Цена')),
                ('old_price', models.IntegerField(verbose_name='Старая Цена')),
                ('pricediscount', models.IntegerField(verbose_name='Процент скидки')),
                ('descriptiontovar', ckeditor.fields.RichTextField(verbose_name='Описание Товара')),
                ('size_range', models.CharField(blank=True, max_length=100, null=True, verbose_name='Размерный ряд')),
                ('tkan', models.CharField(max_length=200, verbose_name='Состав ткани')),
                ('quantity_inline_tovar', models.IntegerField(verbose_name='Кол-во в линейке')),
                ('material', models.CharField(max_length=155, verbose_name='Материал')),
                ('poiskizbrannye', models.BooleanField(verbose_name='Избранные')),
                ('hitofsales', models.BooleanField(verbose_name='Хит продаж')),
                ('newtov', models.BooleanField(verbose_name='Новинки')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tovars', to='shop.category')),
            ],
            options={
                'verbose_name_plural': 'Товар',
                'ordering': ('nametovar',),
            },
        ),
        migrations.CreateModel(
            name='ProductItemImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='None/%Y/%m/%d', validators=[shop.models.validate_even])),
                ('colortovar', colorfield.fields.ColorField(choices=[('#FFFFFF', 'white'), ('#000000', 'black'), ('#FF0000', 'red'), ('#00FF00', 'lime'), ('#0000FF', 'blue'), ('#FFFF00', 'yellow'), ('#808080', 'gray'), ('#000080', 'navy')], default='#FFFFFF', image_field=None, max_length=18, samples=None)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_item_image', to='shop.tovar')),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_itemcart', models.IntegerField(blank=True, default=0, null=True, verbose_name='Цена')),
                ('cart_discount', models.IntegerField(default=0, verbose_name='Процент скидки')),
                ('cart_oldprice', models.IntegerField(verbose_name='Старая Цена')),
                ('size_cart', models.CharField(blank=True, max_length=100, null=True, verbose_name='Размерный ряд')),
                ('quantity_item_lines', models.IntegerField(blank=True, default=1, null=True, verbose_name='Кв-о линеек')),
                ('quantity_cart_lines', models.IntegerField(blank=True, default=0, null=True, verbose_name='К-во всхтов в лке')),
                ('sale_item_before_disc', models.IntegerField(blank=True, default=0, null=True, verbose_name='Общая сумма до учета скидок')),
                ('sale_item', models.IntegerField(blank=True, default=0, null=True, verbose_name='Сумма после скидок')),
                ('result_price', models.IntegerField(blank=True, default=0, null=True, verbose_name='Итого к оплате')),
                ('cart', models.ManyToManyField(blank=True, related_name='custom_cart', to='shop.cart')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to='shop.shippingaddress')),
            ],
            options={
                'verbose_name_plural': 'Оформление заказа',
            },
        ),
        migrations.AddField(
            model_name='cart',
            name='pers',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='cart_plus', to='shop.carzinatotal'),
        ),
        migrations.AddField(
            model_name='cart',
            name='product',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='cart_product', to='shop.tovar'),
        ),
    ]
